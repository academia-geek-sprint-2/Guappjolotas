{"version":3,"sources":["context/AppContext.js","pages/Home.jsx","pages/OrderDetail.jsx","pages/OrdersCart.jsx","App.js","index.js"],"names":["AppContext","createContext","AppState","children","useState","data","loading","resources","setResources","getResources","a","getData","resource","axios","get","guajolotas","tamales","bebidas","sabores","food","setfood","id","setId","useEffect","Provider","value","withRouter","history","useContext","handleId","e","_id","currentTarget","getAttribute","push","console","log","background","w","h","ml","mr","direction","mt","alignItems","mb","pointerEvents","Search2","color","paddingRight","type","placeholder","borderRadius","border","spacing","align","map","onClick","boxSize","src","url","index","Flavors","flavors","setFlavor","opt","flavor","objectFit","alt","OrderDetail","pickFood","name","price","Minus","Add","alignSelf","OrderCart","App","isIndeterminate","path","component","OrdersCart","exact","Home","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d173507f.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { createContext, useState, useEffect, Children } from \"react\";\n\nconst initialDetail = {\n    flavor: '',\n    quantity: 0\n}\n\nconst AppState = ({children}) => {\n    \n    /* RESOURCES LOGIC */\n\n    const [resources, setResources] = useState({\n        data: null,\n        loading: true\n    })    \n    \n    const getResources = async () => {\n        const getData = async resource => {\n            const { data } = await axios.get(`https://academiageek-sprint-2.herokuapp.com/${resource}`)\n            return data;\n        }\n        \n        setResources({\n            data: {\n                guajolotas: await getData(\"guajolotas\"),\n                tamales: await getData(\"tamales\"),\n                bebidas: await getData(\"bebidas\"),\n                sabores: await getData(\"sabores\"),\n            },\n            loading: false\n        })\n    }\n\n    /* HOME LOGIC */\n\n    /* \n    food: \"guajolotas\", \"tamales\", \"bebidas\"\n        \"guajolotas\" -> idGuajolota (= idSabor)\n        \"tamales\" -> idTamal (= idSabor)\n        \"bebidas\" -> idBebida (= idSabor)\n    */\n\n    const [food, setfood] = useState(\"guajolotas\");\n    const [id, setId] = useState(0) \n    \n    useEffect(() => {\n        getResources()\n  }, [])\n\n    return(\n        <AppContext.Provider value={{\n            resources,\n            food,\n            setfood,\n            id, \n            setId\n        }}>\n            { children}\n        </AppContext.Provider>\n    )\n    \n}\n\nexport const AppContext = createContext();\n\nexport default AppState;","import { Heading } from '@chakra-ui/layout';\nimport { Flex } from '@chakra-ui/layout';\nimport { Text } from '@chakra-ui/layout';\nimport { Input } from '@chakra-ui/input';\nimport { InputGroup } from '@chakra-ui/input';\nimport { InputLeftElement } from '@chakra-ui/input';\nimport { Search2Icon } from '@chakra-ui/icons';\nimport { Container } from '@chakra-ui/layout';\nimport React, { useContext, useEffect } from 'react';\nimport { AppContext } from '../context/AppContext';\nimport { VStack, Wrap, WrapItem } from '@chakra-ui/layout';\nimport { withRouter } from \"react-router-dom\";\nimport { Image } from '@chakra-ui/image';\nimport { CircularProgress } from '@chakra-ui/progress';\n\nconst Home = ({ history }) => {\n\n    const { resources, food, setfood, id, setId} = useContext(AppContext)\n    \n    const { data } = resources;\n\n    const handleId = e => {\n        const _id = ~~e.currentTarget.getAttribute('index')-1;\n        setId(_id)\n        history.push(`/order`)\n        console.log(history);\n\n    }\n\n    return (\n        <Container background=\"#F2F2F2\" w=\"360px\" h=\"1244px\" ml=\"auto\" mr=\"auto\">\n                <Flex direction=\"column\" mt=\"2\" alignItems=\"center\">\n                    <Heading mt=\"20\" mb=\"10\">imagenes</Heading>\n                    <Text mb=\"20\">Nada como una Guajolota para empezar el d√≠a</Text>\n                    <InputGroup >\n                        <InputLeftElement\n                            pointerEvents=\"none\"\n                            children={<Search2Icon color=\"gray.300\" paddingRight=\"5\" />}\n                        />\n                        <Input type=\"text\" placeholder=\"Sabor guajolota,bebida...\" ml=\"auto\" mr=\"auto\" w=\"312px\" h=\"60px\" borderRadius=\"50\" border=\"none\" />\n                    </InputGroup>\n                    <VStack \n                      spacing={4}\n                      align=\"stretch\"\n                    >\n                        {data[food].map(e => (\n                            <Image\n                              onClick={handleId}\n                              boxSize=\"100px\" \n                              src={e.url} \n                              index={e.id}\n                            />\n                        ))}\n                    </VStack>\n                </Flex>\n        </Container>\n    );\n}\n\nexport default withRouter(Home);","import { Image } from '@chakra-ui/image';\nimport { Box, Center, Container, Flex, Heading, Text, VStack, Wrap, WrapItem } from '@chakra-ui/layout';\nimport { MinusIcon, AddIcon } from '@chakra-ui/icons'\nimport React, { useContext, useState } from 'react';\nimport { AppContext } from '../context/AppContext';\n\nconst OrderDetail = () => {\n\n    const { resources, food, id, setId } = useContext(AppContext)\n    const [combo, setCombo] = useState(0)\n\n    const pickFood = resources.data[food][id]\n    \n    const flavors = resources.data.sabores[\"tortas\"];\n    console.log(resources.data.sabores);\n    \n    return (\n        <Container background=\"#F2F2F2\" w=\"360px\" h=\"1244px\" ml=\"auto\" mr=\"auto\">\n            <Flex direction=\"column\" mt=\"2\" alignItems=\"center\">\n                <Image src={pickFood.url} alt={pickFood.name} />\n                <Heading >Guajolota de tamal de {pickFood.name}</Heading>\n                <Heading>${pickFood.price} MXN</Heading>\n                <div>\n                    <MinusIcon/>5<AddIcon/>\n                </div>\n                <Heading alignSelf=\"start\">Sabores</Heading>\n                <Flavors flavors={flavors} setFlavor={setId}/>\n                <Heading alignSelf=\"start\">Guajolocombo</Heading>\n                <Text alignSelf=\"start\">Selecciona una {} que mas te guste y disfruta de tu desayuno</Text>\n            </Flex>\n        </Container>\n    );\n}\n\nconst Flavors = ({flavors, setFlavor}) => {\n    const handleId = e => {\n        const opt = ~~e.currentTarget.getAttribute('index');\n        setFlavor(opt-1)\n    }\n    return(\n        <>\n        <Wrap>\n            { flavors.map(flavor => (\n            <WrapItem index={flavor.id} onClick={handleId}>\n            <Center w=\"180px\" h=\"80px\">\n            <Image \n                boxSize=\"100px\"\n                objectFit=\"cover\"\n                src={flavor.url}\n                alt={flavor.id}\n            />\n            </Center>\n            </WrapItem>\n            ) ) }\n        </Wrap>\n        </>\n    )\n}\nconst Combo = ({drinks, setCombo}) => {\n    const handleId = e => {\n        console.log(~~e.currentTarget.getAttribute('index')-1);\n    }\n    return(\n        <>\n        <Wrap>\n            { drinks.map(drink => (\n            <WrapItem index={drink.id} onClick={handleId}>\n            <Center w=\"180px\" h=\"80px\">\n            <Image \n                boxSize=\"100px\"\n                objectFit=\"cover\"\n                src={drink.url}\n                alt={drink.key}\n            />\n            </Center>\n            </WrapItem>\n            ) ) }\n        </Wrap>\n        </>\n    )\n}\n\nexport default OrderDetail;","import React from 'react';\n\nconst OrderCart = () => {\n    return (\n        <>\n        <h1>I'm at OrderCart</h1>\n        </>\n    );\n}\n\nexport default OrderCart;","import { Auth, Home, OrderDetail, UpdateOrder, OrdersCart } from \"./pages\";\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\nimport {AppContext} from './context/AppContext';\nimport { useContext } from \"react\";\nimport { CircularProgress, Spinner } from \"@chakra-ui/react\";\n\n\nfunction App() {\n\n  const { resources } = useContext(AppContext)\n\n  if(resources.loading) return <CircularProgress isIndeterminate color=\"green.300\" />\n\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/order\" component={OrderDetail}/>\n        <Route path=\"/cart\" component={OrdersCart}/>\n        <Route exact path=\"/\" component={Home}/>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport AppState from './context/AppContext';\nimport { ChakraProvider } from \"@chakra-ui/react\"\n\nReactDOM.render(\n  <ChakraProvider>\n  <AppState>\n    <App />\n  </AppState>\n  </ChakraProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}